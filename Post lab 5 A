import java.util.ArrayList;
import java.util.List;
interface Observer {
    void update(String event);
}
class Bidder implements Observer {
    private String name;

    public Bidder(String name) {
        this.name = name;
    }
    public void update(String event) {
        System.out.println(name + " received update: " + event);
    }
}
interface Subject {
    void addObserver(Observer observer);
    void removeObserver(Observer observer);
    void notifyObservers(String event);
}
class Auction implements Subject {
    private List<Observer> observers = new ArrayList<>();
    private String item;
    public void setItem(String item) {
        this.item = item;
        notifyObservers("Item " + item + " is available.");
    }
    public void startBidding() {
        notifyObservers("Bidding started for item: " + item);
    }
    public void endBidding() {
        notifyObservers("Bidding ended for item: " + item);
    }
    public void addObserver(Observer observer) {
        observers.add(observer);
    }
    public void removeObserver(Observer observer) {
        observers.remove(observer);
    }
    public void notifyObservers(String event) {
        for (Observer observer : observers) {
            observer.update(event);
        }
    }
}
